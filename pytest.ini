[pytest]
# Pytest configuration file

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add project root to Python path
pythonpath = .

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Strict markers (don't allow undefined markers)
    --strict-markers
    # Show summary of all test outcomes
    -ra
    # Disable warnings summary (too noisy)
    --disable-warnings
    # Show extra test summary info
    --tb=short
    # asyncio mode
    --asyncio-mode=auto

# Markers for test categorization
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (require API to be running)
    slow: Slow tests (may take more than 1 second)
    model_loading: Tests that require loading ML models
    requires_server: Tests that require a running server

# Minimum version
minversion = 8.0

# Timeout (in seconds) - prevent tests from hanging
timeout = 300

# Coverage options
[coverage:run]
source = src
omit =
    */tests/*
    */benchmarks/*
    */__pycache__/*
    */venv/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov

